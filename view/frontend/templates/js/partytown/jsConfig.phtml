<?php
$isEnabled = $block->isEnabled(); 
if (!$isEnabled) { 
	return; 
}

$forwardingEventsList = $block->getForwardingEventsList();
$isProxyingRequestsEnabled = $block->isProxyingRequestsEnabled();
$proxyRequestsDomains = $block->getProxyingRequestList(); 
$proxyUrl =$block->getProxyUrl(); 
$debugMode = $block->isDebugEnabled();
$libUrl = $this->getViewFileUrl('Perspective_Partytown::js/lib');
$relativePath =  parse_url($libUrl, PHP_URL_PATH) . '/';
?>

<script>
	const forward = <?= $forwardingEventsList ?>;
	const debug = !!<?= $debugMode ?> || false;
    window.partytown = {
    	<?php if ($isProxyingRequestsEnabled && $proxyRequestsDomains): ?>
    		resolveUrl: function (url, location, type) {
			  const proxyRequestsDomains = <?= $proxyRequestsDomains ?>;
    		  if(proxyRequestsDomains.includes(url.hostname)){
				let proxyUrl = new URL(`<?= (string) $proxyUrl ?>`);
    		    proxyUrl.searchParams.append('url', url.href);
    		    return proxyUrl;
    		  }
    		  return url;
    		},
    	<?php endif; ?>
    	forward,
    	debug,
		lib: "<?= $relativePath ?>",
		logCalls: debug,
    }
</script>
